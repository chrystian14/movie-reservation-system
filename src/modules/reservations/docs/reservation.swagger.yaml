paths:
  /api/v1/reservations:
    get:
      tags:
        - Reservations
      description: List user reservations by desc datetime. If user is admin, list all reservations.
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reservation"
        401:
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - Reservations
      description: Create and return a new reservation.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBodyReservation"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
        401:
          $ref: "#/components/responses/Unauthorized"
        400:
          $ref: "#/components/responses/BadRequest"

  /api/v1/reservations/{id}:
    delete:
      tags:
        - Reservations
      description: Delete a reservation.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NO CONTENT
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
